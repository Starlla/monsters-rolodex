{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/serach-box/serach-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SerachBox","onSearchChange","type","placeholder","onChange","App","state","serachField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCFHC,EAAW,SAAAC,GACtB,OAAO,qBAAKP,UAAU,YAAf,SAA4BO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCHxEQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,eAAF,OACvB,uBAAOX,UAAU,SAASY,KAAK,SAASC,YAAY,kBAAkBC,SAAUH,MC+BnEI,E,kDA3Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC3EF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE7C,WAAU,IAAD,SACyBE,KAAKR,MAA9BR,EADA,EACAA,SAAUS,EADV,EACUA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQK,KAAKuB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,eAAgB,SAAAkB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACnE,cAAC,EAAD,CAAUvB,SAAYiB,W,GArBZO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adad2343.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\nexport const Card = ({monster}) => (\n  <div className=\"card-container\">\n    <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\n    <h2>{monster.name}</h2>\n    <p>{monster.email}</p>\n  </div>\n)","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => {\n  return <div className='card-list'>{props.monsters.map(monster=>(<Card key={monster.id} monster={monster}></Card>))}</div>\n}","import React from 'react';\nimport './serach-box.styles.css';\nexport const SerachBox = ({onSearchChange})=> (\n  <input className=\"search\" type=\"search\" placeholder=\"serach monsters\" onChange={onSearchChange}/>\n)","import './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SerachBox } from './components/serach-box/serach-box.component';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      serachField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n  render() {\n    const {monsters, serachField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(serachField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SerachBox onSearchChange={e=>this.setState({serachField: e.target.value})}/>\n        <CardList monsters = {filteredMonsters}></CardList>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}